[{"bbox": [125, 111, 1570, 857], "category": "Picture"}, {"bbox": [108, 897, 1565, 1146], "category": "Text", "text": "可以看出有状态流计算架构将会逐步成为企业作为构建数据平台的架构模式,Apache Flink 就是有状态的流计算架构,通过实现Google Dataflow流式计算模型实现了高吞吐、低延迟、高性能兼具的实时流式计算框架,同时Flink支持高度容错的状态管理,防止状态在计算过程中因为系统异常而出现数据丢失,Flink周期性地通过分布式快照技术Checkpoints实现状态的持久化维护,即使在系统停机或者异常情况下都能正确的计算出来结果。"}, {"bbox": [113, 1194, 517, 1264], "category": "Title", "text": "## 1.3 Flink核心特性"}, {"bbox": [108, 1294, 1525, 1344], "category": "Text", "text": "Flink具有先进的架构理念,拥有诸多的优秀特性以及完善的编程接口,Flink的优势有以下几点:"}, {"bbox": [108, 1376, 1594, 2062], "category": "Text", "text": "1. 批流一体化\n\nFlink可以在底层用同样的数据抽象和计算模型来进行批处理和流处理。事实上,Flink在设计理念上没有刻意强调批处理和流处理,而更多的强调数据的有界和无界,这就意味着Flink能够满足企业业务需求,无需用两种甚至多种框架分别实现批处理和流处理,这大大降低了架构设计、开发、运维的复杂度,可以节省大量的人力成本。\n\n2. 同时支持高吞吐、低延迟、高性能\n\nFlink是目前开源社区中唯一一套集高吞吐、低延迟、高性能三者于一身的分布式流式数据处理框架。像Apache Spark也只能兼顾高吞吐和高性能特性,主要因为在SparkStreaming流式计算中无法做到低延迟保障;而流式计算框架Apache Storm只能支持低延迟和高性能特性,但是无法满足高吞吐的要求。而满足高吞吐、低延迟、高性能这三个目标对分布式流式计算框架来说是非常重要的。\n\n3. 支持事件时间(Event Time)概念"}]