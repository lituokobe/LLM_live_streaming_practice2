[{"bbox": [195, 94, 1571, 498], "category": "List-item", "text": "* 弃用StreamingFileSink, 建议使用FileSink。\n* 优化checkpoint机制;\n* PyFlink1.16将python3.6版本标记为弃用, PyFlink1.16版本将成为使用python3.6版本最后一个版本;\n* Hadoop支持3.3.2版本;\n* Kafka支持3.1.1版本;\n* Hive支持2.3.9版本;"}, {"bbox": [112, 539, 557, 611], "category": "Title", "text": "# 1.2 数据架构的演变"}, {"bbox": [108, 640, 1555, 791], "category": "Text", "text": "近年来随着越来越多的大数据技术被开源,例如:HDFS、Spark等,伴随这些技术的发展与普及,促使企业数据架构的演进——从传统的关系型数据存储架构逐步演化为分布式处理和存储的架构。我们通过数据架构的演变角度来了解下为什么今天Flink实时计算引擎会爆火起来。"}, {"bbox": [112, 838, 612, 901], "category": "Title", "text": "## 1.2.1 业务处理-单体架构"}, {"bbox": [110, 933, 1587, 1133], "category": "Text", "text": "传统单体架构最大的特点是集中式数据存储,一个企业中可能有很多业务系统,例如:订单系统、CRM系统、ERP系统等,这些系统的数据一般存储在关系型数据库中,这些存储的数据一般反应当前的业务状态,也就是存储的是支撑业务正常运转的事务数据,例如:系统订单交易量、网站活跃用户数、每个用户在线的状态等,针对这些数据库的操作也主要是增删改查操作,单体架构如下:"}, {"bbox": [146, 1216, 1529, 1707], "category": "Picture"}, {"bbox": [110, 1767, 1589, 1965], "category": "Text", "text": "单体架构初期的效率很高,但是随着时间的推移,业务越来越多,业务系统逐渐变得庞大,越来越难维护与升级,并且不同的业务系统之间可能有一些共同的业务模块,并且一单业务系统依赖的数据库有问题会导致整个业务系统变的不可用,为了解决以上问题,企业开始逐渐采用微服务架构作为企业业务系统的架构体系。"}, {"bbox": [112, 2015, 656, 2076], "category": "Title", "text": "## 1.2.2 业务处理-微服务架构"}]