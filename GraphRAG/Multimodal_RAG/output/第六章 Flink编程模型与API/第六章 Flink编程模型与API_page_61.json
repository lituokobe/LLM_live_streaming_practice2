[{"bbox": [122, 99, 1328, 994], "category": "Text", "text": "```java\np.addColumn Bytes.toBytes(\"cf\"), Bytes.toBytes(\"duration\"), Bytes.toBytes(duration));\n\n//插入数据\ntable.put(p);\n\n//关闭表对象\ntable.close();\n}\n\n//在Sink 关闭时调用一次, 这里关闭HBase连接\n@Override\npublic void close() throws Exception {\n    //关闭连接\n    conn.close();\n}\n\n});\n\nenv.execute();\n```"}, {"bbox": [135, 1042, 402, 1088], "category": "Title", "text": "## • Scala代码实现"}, {"bbox": [122, 1135, 1437, 2075], "category": "Text", "text": "```scala\nval env: StreamExecutionEnvironment = StreamExecutionEnvironment.getExecutionEnvironment\n\n/**\n * socket 中输入数据如下:\n * 001,186,187,busy,1000,10\n * 002,187,186,fail,2000,20\n * 003,186,188,busy,3000,30\n * 004,188,186,busy,4000,40\n * 005,188,187,busy,5000,50\n */\nval ds: DataStream String = env.socketTextStream(\"node5\", 9999)\n\nds.addSink(new RichSinkFunction String) {\n    var conn: Connection = _\n\n    // open方法在sink的生命周期内只会执行一次\n    override def open parameters: Configuration): Unit = {\n        val conf: org.apache.hadoop.conf Configuration = HBaseConfiguration.create()\n        conf.set(\"hbase.zookeeper.quorum\", \"node3,node4,node5\")\n        conf.set(\"hbase.zookeeper property.clientPort\", \"2181\")\n    }\n\n    //创建连接\n    conn = ConnectionFactory.createConnection(conf)\n```"}]