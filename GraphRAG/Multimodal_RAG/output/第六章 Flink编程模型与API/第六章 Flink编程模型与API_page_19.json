[{"bbox": [138, 180, 1539, 577], "category": "Picture"}, {"bbox": [135, 650, 388, 696], "category": "Section-header", "text": "* **Java代码实现**"}, {"bbox": [124, 746, 1604, 1170], "category": "Text", "text": "```java\nStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\nDataStreamSource<Integer> ds = env.fromCollectionITEchsAsList(1, 3, 5, 7);\nSingleOutputStreamOperatorмендаты mapTransformation = ds.map(new MapFunction Integer, Integer)'\n    @Override\n    public Integer map Integer value) throws Exception {\n        return value + 1;\n    }\n});\nmapTransformation.print();\nenv.execute();\n```"}, {"bbox": [111, 1220, 1585, 1315], "category": "Text", "text": "**注意**：以上oriDataStream经过Flink转换得到了“SingleOutputStreamOperator”类型，该类型继承了oriDataStream类。"}, {"bbox": [135, 1353, 402, 1398], "category": "Section-header", "text": "* **Scala代码实现**"}, {"bbox": [124, 1451, 1435, 1745], "category": "Text", "text": "```scala\nval env: StreamExecutionEnvironment = StreamExecutionEnvironment.getExecutionEnvironment\n//导入隐式转换\nimport org.apache flink streaming api Play\nval ds: DataStream [Int] = env.fromCollection (List(1, 3, 5, 7))\nval result: DataStream [Int] = ds.map(_ + 1)\nresult.print()\nenv.execute()\n```"}, {"bbox": [111, 1812, 406, 1873], "category": "Section-header", "text": "## 6.4.2 flatMap"}]