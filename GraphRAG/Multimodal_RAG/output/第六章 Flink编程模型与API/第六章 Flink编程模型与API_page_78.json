[{"bbox": [135, 122, 401, 167], "category": "Title", "text": "## Scala代码实现"}, {"bbox": [125, 219, 1597, 1872], "category": "Text", "text": "```scala\nval env = StreamExecutionEnvironment.getExecutionEnvironment\n\n//导入隐式转换\nimport org.apache flink api scala._\n\n/**\n * Socket中的数据格式如下:\n * 001,186,187,success,1000,10\n * 002,187,186,fail,2000,20\n * 003,186,188,success,3000,30\n * 004,188,186,success,4000,40\n * 005,188,187,busy,5000,50\n */\nval ds: DataStream [String] = env.socketTextStream(\"node5\", 9999)\n\n//定义侧输出流的标签\nval outputTag: OutputTag [String] = OutputTag [String] (\"side-output\")\n\nval mainStream: DataStream [String] = ds.process((value: String, ctx: ProcessFunction [String, String] #Context,\n//value 格式: 001,186,187,success,1000,10\nval split: Array [String] = value.split(\",\")\nval callType: String = split(3) //通话类型\n//判断通话类型\nif (\"success\".equals(callType)) {\n  //成功类型,输出到主流\n  out.collect(value)\n} else {\n  //其他类型,输出到侧输出流\n  ctx.output(outputTag, value)\n}\n})\n\n//获取主流\nmainStream.print(\"主流\")\n\n//获取侧输出流\nmainStream.getSideOutput(outputTag).print(\"侧输出流\")\n\nenv.execute()\n```"}, {"bbox": [113, 1925, 902, 1969], "category": "Text", "text": "以上代码执行后,向Socket中输入如下数据进行测试。"}]