[{"bbox": [156, 100, 1602, 2055], "category": "Text", "text": "```java\npublic void asyncInvoke Integer input, ResultFuture<String> resultFuture) throws Exception {\n    //提交异步任务到线程池中\n    executorService.submit(new Runnable() {\n        @Override\n        public void run() {\n            try {\n                /**\n                 * 以下两个方法不能设置在open方法中,因为多线程共用数据库连接和pst对象,这样会导致线程不安全\n                 */\n                Connection conn =DriverManager.getConnection(\"jdbc:mysql://node2:3306/mydb?useSSL=false\");\n                conn prepareresultSet =pst executeQuery();\n                //遍历结果集\n                while (resultSet!=null && ResultSet.next()) {\n                    //获取数据\n                    int id = ResultSetetriid();\n                    String name = ResultSet惟name);\n                    int age = ResultSetgetint(\"age\");\n                    //返回结果\n                    resultFuture complete (Arrays asList(\"id=\" +id +\",name=\" +name +\",age=\" +age));\n                }\n                //关闭资源\n                pst.close();\n                conn.close();\n            } catch (Exception e) {\n                e printstackTrace();\n            }\n        }\n    });\n}\n\n/**\n * 异步IO超时处理逻辑,主要避免程序出错。参数如下:\n * 第一个参数是输入数据\n * 第二个参数是异步IO返回的结果\n */\n@Override\npublic void timeout (Integer input, ResultFuture <String> resultFuture) throws Exception {\n    resultFuture complete (Collections singletonList(\"异步IO超时!!!\"));\n}\n```"}]