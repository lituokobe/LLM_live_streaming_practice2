[{"bbox": [120, 94, 1232, 447], "category": "Text", "text": "```java\n//返回tuple,第一个参数是哪些数据流继续迭代,第二个参数是哪些数据流进行输出\n(stillGreatorThanZero, lessThanZero)\n})\n\n//打印最后结果\nresult.print()\n\nenv.execute()\n```"}, {"bbox": [111, 501, 674, 574], "category": "Title", "text": "# 6.5 函数接口与富函数类"}, {"bbox": [111, 616, 422, 680], "category": "Section-header", "text": "## 6.5.1 函数接口"}, {"bbox": [108, 708, 1569, 910], "category": "Text", "text": "上一小节中学习过的Flink算子方法都有对应的接口来完成业务逻辑处理,我们可以自定义类来实现这些接口完成业务逻辑编写,然后将这些类作为参数传递给Flink算子。这些实现接口在Flink中我们通常称为函数接口,常见的Flink函数接口有:MapFunction、FlatMapFunction、ReduceFunction、FilterFunction等。"}, {"bbox": [111, 943, 1578, 1044], "category": "Text", "text": "无论是Java代码还是Scala代码编写都可以单独实现对应函数接口后当做参数传递给Flink算子,下面举例说明。"}, {"bbox": [108, 1075, 1375, 1128], "category": "Text", "text": "**案例：向Socket中输入通话数据，按照指定格式输出每个通话的拨号时间和结束时间。**"}, {"bbox": [111, 1160, 585, 1210], "category": "Text", "text": "向Socket中输入数据格式如下："}, {"bbox": [120, 1256, 486, 1473], "category": "Text", "text": "```\n001,186,187,busy,1000,10\n002,187,186,fail,2000,20\n003,186,188,busy,3000,30\n004,188,186,busy,4000,40\n005,188,187,busy,5000,50\n```"}, {"bbox": [130, 1517, 322, 1566], "category": "Section-header", "text": "* **Java代码**"}, {"bbox": [120, 1613, 1481, 2085], "category": "Text", "text": "```java\npublic class CommonFunctionTest {\n    public static void main(String[] args) throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        /**\n         * Socket中的数据格式如下:\n         * 001,186,187,busy,1000,10\n         * 002,187,186,fail,2000,20\n         * 003,186,188,busy,3000,30\n         * 004,188,186,busy,4000,40\n         * 005,188,187,busy,5000,50\n         */\n    }\n}\n```"}]