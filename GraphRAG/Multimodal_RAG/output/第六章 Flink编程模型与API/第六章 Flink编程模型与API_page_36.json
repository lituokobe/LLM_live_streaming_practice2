[{"bbox": [123, 100, 1370, 1889], "category": "Text", "text": "```java\n// map方法,输入一个元素,返回一个元素\n@Override\npublic String map(String value) throws Exception {\n    //value 格式: 001,186,187,busy,1000,10\n    String[] split = value.split(\",\");\n    String sid = split[0];\n    String callOut = split[1]; //主叫\n    String callIn = split[2]; //被叫\n    String callType = split[3]; //通话类型\n    String callTime = split[4]; //通话时间\n    String duration = split[5]; //通话时长\n\n    //mysql中获取主叫和被叫的姓名\n    String callOutName = \"\";\n    String callInName = \"\";\n\n    pst.setString(1,callOut);\n    rst = pst.executeQuery();\n    while (rst.next()) {\n        callOutName = rst.getString(\"name\");\n    }\n    pst.setString(1,callIn);\n    rst = pst.executeQuery();\n    while (rst.next()) {\n        callInName = rst.getString(\"name\");\n    }\n\n    return \"基站ID:\" + sid + \",主叫号码:\" + callOut + \",主叫姓名:\" + callOutName + \",\" +\n        \"被叫号码:\" + callIn + \",被叫姓名:\" + callInName + \",通话类型:\" + callType + \",\" +\n        \"通话时间:\" + callTime + \",通话时长:\" + duration + \"s\";\n}\n\n// close()方法在map方法之后执行,用于清理\n@Override\npublic void close() throws Exception {\n    rst.close();\n    pst.close();\n    conn.close();\n}\n}\n}\n```"}, {"bbox": [135, 1936, 334, 1979], "category": "Title", "text": "## Scala代码"}]