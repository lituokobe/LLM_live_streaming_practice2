[{"bbox": [125, 104, 1032, 226], "category": "Text", "text": "```k language=\"k language=\"k language=\"k language=\"k\nval ds: DataStream String] = env.socketTextStream(\"node5\", 9999)\nds.rebalance.print().setParallelism(3)\nenv.execute()\n```"}, {"bbox": [114, 291, 620, 352], "category": "Section-header", "text": "### 6.7.4 rescale重缩放分区"}, {"bbox": [111, 384, 1585, 580], "category": "Text", "text": "在Flink中可以使用rescale方法使用rescale partitioner分区策略对数据进行重分区。与rebalance partitioner分区策略类似，rescaling 分区策略也采用RoundRobin负载均衡算法进行重分区，但该分区策略不采用全局性的网络传输来实现数据的重分区，它使用一种本地的分区策略，通过调整任务的数量来改变数据的分配方式。"}, {"bbox": [111, 618, 1561, 763], "category": "Text", "text": "当Flink处理的数据量较多时，rescale 分区策略会在当前TaskManager中进行本地节点的重分区，这样只需要在当前TaskManager中多个Slot之间进行数据重新分配而避免跨节点全局重分区操作带来的网络开销大的问题。"}, {"bbox": [126, 862, 1541, 1363], "category": "Picture"}, {"bbox": [126, 1388, 1541, 1889], "category": "Picture"}, {"bbox": [806, 1913, 1236, 1966], "category": "Caption", "text": "Rescale重缩放分区"}]