[{"bbox": [124, 100, 1415, 1634], "category": "Text", "text": "```kotlin\n}\n\n// invoke方法在sink的生命周期内会执行多次,每条数据都会执行一次\noverride def invoke(currentOne: String, context: SinkFunction.Context): Unit = {\n    //解析数据: 001,186,187,busy,1000,10\n    val split: Array String] = currentOne.split(\",\")\n    //准备rowkey\n    val rowkey = split(0)\n    //获取列\n    val callOut = split(1)\n    val callIn = split(2)\n    val callType = split(3)\n    val callTime = split(4)\n    val duration = split(5)\n\n    //获取表对象\n    val table = conn.getTableorg.apache.hadoop.hbase TablesName valueOf(\"flink-sink-hbase\"))\n    //准备put对象\n    val put = new Put(rowkey_bytes())\n    //添加列\n    put.addColumn(\"cf\".bytes(), \"callOut\".bytes(), callOut_bytes())\n    put.addColumn(\"cf\".bytes(), \"callIn\".bytes(), callIn_bytes())\n    put.addColumn(\"cf\".bytes(), \"callType\".bytes(), callType_bytes())\n    put.addColumn(\"cf\".bytes(), \"callTime\".bytes(), callTime_bytes())\n    put.addColumn(\"cf\".bytes(), \"duration\".bytes(), duration_bytes())\n    //插入数据\n    table.put(put)\n    //关闭表\n    table.close()\n}\n\n// close方法在sink的生命周期内只会执行一次\noverride def close(): Unit = super.close()\n})\n\ndenv.execute()\n```"}, {"bbox": [112, 1681, 469, 1727], "category": "Title", "text": "### 3) 向Socket中输出数据"}, {"bbox": [124, 1776, 483, 1988], "category": "Text", "text": "```\n001,186,187,busy,1000,10\n002,187,186,fail,2000,20\n003,186,188,busy,3000,30\n004,188,186,busy,4000,40\n005,188,187,busy,5000,50\n```"}, {"bbox": [112, 2038, 460, 2084], "category": "Title", "text": "### 4) 查看HBase中表数据"}]