[{"bbox": [137, 114, 1569, 201], "category": "Text", "text": "* `maxBy`: 同`max`类似, 对指定的字段进行max最大值操作, `maxBy`返回的是最大值对应的整个对象。"}, {"bbox": [137, 222, 385, 261], "category": "Title", "text": "## Java代码实现"}, {"bbox": [127, 319, 1551, 1330], "category": "Text", "text": "```java\nStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n//准备集合数据\nList<StationLog> list = Arrays.asList(\n    new StationLog(\"sid1\", \"18600000000\", \"18600000001\", \"success\", System.currentTimeMillis(), 120L),\n    new StationLog(\"sid1\", \"18600000001\", \"18600000002\", \"fail\", System currentTimeMillis(), 30L),\n    new StationLog(\"sid1\", \"18600000002\", \"18600000003\", \"busy\", System currentTimeMillis(), 50L),\n    new StationLog(\"sid1\", \"18600000003\", \"18600000004\", \"barring\", System currentTimeMillis(), 90L),\n    new StationLog(\"sid1\", \"18600000004\", \"18600000005\", \"success\", System currentTimeMillis(), 300L)\n);\n\nKeyedStream<StationLog, String> keyedStream = env.fromCollection(list)\n    .keyBystationLog -> stationLog sid;\n//统计duration的总和\nkeyedStream.sum(\"duration\").print();\n//统计duration的最小值, min返回该列最小值, 其他列与第一条数据保持一致\nkeyedStream.min(\"duration\").print();\n//统计duration的最小值, minBy返回的是最小值对应的整个对象\nkeyedStream.minBy(\"duration\").print();\n//统计duration的最大值, max返回该列最大值, 其他列与第一条数据保持一致\nkeyedStream.max(\"duration\").print();\n//统计duration的最大值, maxBy返回的是最大值对应的整个对象\nkeyedStream.maxBy(\"duration\").print();\n\nenv.execute();\n```"}, {"bbox": [137, 1388, 399, 1427], "category": "Title", "text": "## Scala代码实现"}, {"bbox": [127, 1484, 1596, 2069], "category": "Text", "text": "```scala\nval env: StreamExecutionEnvironment = StreamExecutionEnvironment.getExecutionEnvironment\n// 导入隐式转换\nimport org.apache.flink api Play\n\nval list: List[StationLog] = List(StationLog(\"sid1\", \"18600000000\", \"18600000001\", \"success\", System.currentTi\n    StationLog(\"sid1\", \"18600000001\", \"18600000002\", \"fail\", System currentTimeMillis, 30L),\n    StationLog(\"sid1\", \"18600000002\", \"18600000003\", \"busy\", System.currentTimeMillis, 50L),\n    StationLog(\"sid1\", \"18600000003\", \"18600000004\", \"barring\", System.currentTimeMillis, 90L),\n    StationLog(\"sid1\", \"18600000004\", \"18600000005\", \"success\", System.currentTimeMillis, 300L))\n\nval ds: DataStream[StationLog] = env.fromCollection(list)\nval keyedStream: KeyedStream[StationLog, String] = ds.keyBystationLog => stationLog sid\n\n//统计duration的总和\n```"}]