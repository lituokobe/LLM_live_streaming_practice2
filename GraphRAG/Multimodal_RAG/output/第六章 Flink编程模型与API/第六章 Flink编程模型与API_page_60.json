[{"bbox": [124, 98, 1315, 2101], "category": "Text", "text": "```\n* 002,187,186,fail,2000,20\n* 003,186,188,busy,3000,30\n* 004,188,186,busy,4000,40\n* 005,188,187,busy,5000,50\n*/\nDataStreamSource<String> ds = env.socketTextStream(\"node5\", 9999);\n\nds.addSink(new RichSinkFunction<String>() {\n\n    org.apache.hadoop.hbase.client.Connection conn = null;\n\n    //在Sink 初始化时调用一次,这里创建 HBase连接\n    @Override\n    public void open(Configuration parameters) throws Exception {\n        org.apache.hadoop.conf Configuration conf = HBaseConfiguration.create();\n        conf.set(\"hbase.zookeeper.quorum\",\"node3,node4,node5\");\n        conf.set(\"hbase.zookeeper property.clientPort \", \"2181\");\n        //创建连接\n        conn = ConnectionFactory.createConnection(conf);\n    }\n\n    //Sink数据时,每条数据插入时调用一次\n    @Override\n    public void invoke(String currentOne, Context context) throws Exception {\n        //解析 currentOne 数据, 001,186,187,busy,1000,10\n        String[] split = currentOne.split(\",\");\n\n        //准备rowkey\n        String rowKey = split[0];\n\n        //获取列\n        String callOut = split[1];\n        String callIn = split[2];\n        String callType = split[3];\n        String callTime = split[4];\n        String duration = split[5];\n\n        //获取表对象\n        Table table = conn.getTable(TableName.valueOf(\"flink-sink-hbase\"));\n\n        //创建Put对象\n        Put p = new Put Bytes.toBytes(rowKey));\n\n        //添加列\n        p.addColumn Bytes.toBytes(\"cf\"), Bytes.toBytes(\"callOut\"), Bytes.toBytes(callOut));\n        p.addColumn Bytes.toBytes(\"cf\"), Bytes.toBytes(\"callIn\"), Bytes.toBytes(callIn));\n        p.addColumn Bytes.toBytes(\"cf\"), Bytes.toBytes(\"callType\"), Bytes.toBytes(callType));\n        p.addColumn Bytes.toBytes(\"cf\"), Bytes.toBytes(\"callTime\"), Bytes.toBytes(callTime));\n```"}]